
mmul.a64:     file format elf64-littleaarch64
mmul.a64
architecture: aarch64, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x0000000000000100

Program Header:
    LOAD off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**16
         filesz 0x000000000000028c memsz 0x000000000000028c flags r-x
    LOAD off    0x000000000000028c vaddr 0x000000000001028c paddr 0x000000000001028c align 2**16
         filesz 0x0000000000008000 memsz 0x0000000000010004 flags rw-
private flags = 0:

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .text         0000018c  0000000000000100  0000000000000100  00000100  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00008000  000000000001028c  000000000001028c  0000028c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00008000  0000000000018290  0000000000018290  0000828c  2**3
                  ALLOC
  3 .comment      00000015  0000000000000000  0000000000000000  0000828c  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
0000000000000100 l    d  .text	0000000000000000 .text
000000000001028c l    d  .data	0000000000000000 .data
0000000000018290 l    d  .bss	0000000000000000 .bss
0000000000000000 l    d  .comment	0000000000000000 .comment
0000000000000000 l    df *ABS*	0000000000000000 mmul.c
0000000000018290 l     O .bss	0000000000008000 product
0000000000020290 g       .bss	0000000000000000 _bss_end__
000000000001828c g       .bss	0000000000000000 __bss_start__
000000000001028c g     O .data	0000000000004000 mats64_1
0000000000020290 g       .bss	0000000000000000 __bss_end__
000000000001828c g       .bss	0000000000000000 __bss_start
0000000000000100 g     F .text	000000000000018c main
0000000000020290 g       .bss	0000000000000000 __end__
000000000001428c g     O .data	0000000000004000 mats64_2
000000000001828c g       .data	0000000000000000 _edata
0000000000020290 g       .bss	0000000000000000 _end
0000000000080000 g       .comment	0000000000000000 _stack
000000000001028c g       .data	0000000000000000 __data_start



Disassembly of section .text:

0000000000000100 <main>:
 100:	d10083ff 	sub	sp, sp, #0x20
 104:	52800008 	mov	w8, #0x0                   	// #0
 108:	b9001fe8 	str	w8, [sp,#28]
 10c:	b9001be8 	str	w8, [sp,#24]
 110:	b9401be8 	ldr	w8, [sp,#24]
 114:	7101011f 	cmp	w8, #0x40
 118:	5400004b 	b.lt	120 <main+0x20>
 11c:	14000050 	b	25c <main+0x15c>
 120:	52800008 	mov	w8, #0x0                   	// #0
 124:	b90017e8 	str	w8, [sp,#20]
 128:	b94017e8 	ldr	w8, [sp,#20]
 12c:	7101011f 	cmp	w8, #0x40
 130:	5400004b 	b.lt	138 <main+0x38>
 134:	14000044 	b	244 <main+0x144>
 138:	52800008 	mov	w8, #0x0                   	// #0
 13c:	b90013e8 	str	w8, [sp,#16]
 140:	b94013e8 	ldr	w8, [sp,#16]
 144:	7101011f 	cmp	w8, #0x40
 148:	5400004b 	b.lt	150 <main+0x50>
 14c:	14000038 	b	22c <main+0x12c>
 150:	900000c8 	adrp	x8, 18000 <mats64_2+0x3d74>
 154:	910a4108 	add	x8, x8, #0x290
 158:	900000a9 	adrp	x9, 14000 <__data_start+0x3d74>
 15c:	910a3129 	add	x9, x9, #0x28c
 160:	9000008a 	adrp	x10, 10000 <main+0xff00>
 164:	910a314a 	add	x10, x10, #0x28c
 168:	b94013eb 	ldr	w11, [sp,#16]
 16c:	2a0b03ec 	mov	w12, w11
 170:	93407d8c 	sxtw	x12, w12
 174:	b9401beb 	ldr	w11, [sp,#24]
 178:	2a0b03ed 	mov	w13, w11
 17c:	93407dad 	sxtw	x13, w13
 180:	b27d03ee 	orr	x14, xzr, #0x8
 184:	9ace21ad 	lsl	x13, x13, x14
 188:	8b0d014a 	add	x10, x10, x13
 18c:	b27f03ed 	orr	x13, xzr, #0x2
 190:	9acd218c 	lsl	x12, x12, x13
 194:	8b0c014a 	add	x10, x10, x12
 198:	b940014b 	ldr	w11, [x10]
 19c:	b94017ef 	ldr	w15, [sp,#20]
 1a0:	2a0f03ea 	mov	w10, w15
 1a4:	93407d4a 	sxtw	x10, w10
 1a8:	b94013ef 	ldr	w15, [sp,#16]
 1ac:	2a0f03ec 	mov	w12, w15
 1b0:	93407d8c 	sxtw	x12, w12
 1b4:	b27d03ed 	orr	x13, xzr, #0x8
 1b8:	9acd218c 	lsl	x12, x12, x13
 1bc:	8b0c0129 	add	x9, x9, x12
 1c0:	b27f03ec 	orr	x12, xzr, #0x2
 1c4:	9acc214a 	lsl	x10, x10, x12
 1c8:	8b0a0129 	add	x9, x9, x10
 1cc:	b940012f 	ldr	w15, [x9]
 1d0:	1b0f7d6b 	mul	w11, w11, w15
 1d4:	2a0b03e9 	mov	w9, w11
 1d8:	93407d29 	sxtw	x9, w9
 1dc:	b94017eb 	ldr	w11, [sp,#20]
 1e0:	2a0b03ea 	mov	w10, w11
 1e4:	93407d4a 	sxtw	x10, w10
 1e8:	b9401beb 	ldr	w11, [sp,#24]
 1ec:	2a0b03ec 	mov	w12, w11
 1f0:	93407d8c 	sxtw	x12, w12
 1f4:	d280012d 	mov	x13, #0x9                   	// #9
 1f8:	9acd218c 	lsl	x12, x12, x13
 1fc:	8b0c0108 	add	x8, x8, x12
 200:	b24007ec 	orr	x12, xzr, #0x3
 204:	9acc214a 	lsl	x10, x10, x12
 208:	8b0a0108 	add	x8, x8, x10
 20c:	f940010a 	ldr	x10, [x8]
 210:	8b090149 	add	x9, x10, x9
 214:	f9000109 	str	x9, [x8]
 218:	b94013e8 	ldr	w8, [sp,#16]
 21c:	320003e9 	orr	w9, wzr, #0x1
 220:	0b090108 	add	w8, w8, w9
 224:	b90013e8 	str	w8, [sp,#16]
 228:	17ffffc6 	b	140 <main+0x40>
 22c:	14000001 	b	230 <main+0x130>
 230:	b94017e8 	ldr	w8, [sp,#20]
 234:	320003e9 	orr	w9, wzr, #0x1
 238:	0b090108 	add	w8, w8, w9
 23c:	b90017e8 	str	w8, [sp,#20]
 240:	17ffffba 	b	128 <main+0x28>
 244:	14000001 	b	248 <main+0x148>
 248:	b9401be8 	ldr	w8, [sp,#24]
 24c:	320003e9 	orr	w9, wzr, #0x1
 250:	0b090108 	add	w8, w8, w9
 254:	b9001be8 	str	w8, [sp,#24]
 258:	17ffffae 	b	110 <main+0x10>
 25c:	d280a728 	mov	x8, #0x539                 	// #1337
 260:	900000c9 	adrp	x9, 18000 <mats64_2+0x3d74>
 264:	910a4129 	add	x9, x9, #0x290
 268:	f9420929 	ldr	x9, [x9,#1040]
 26c:	9ac80920 	udiv	x0, x9, x8
 270:	9b08a400 	msub	x0, x0, x8, x9
 274:	f90007e0 	str	x0, [sp,#8]
 278:	f94007e8 	ldr	x8, [sp,#8]
 27c:	2a0803e1 	mov	w1, w8
 280:	2a0103e0 	mov	w0, w1
 284:	910083ff 	add	sp, sp, #0x20
 288:	d65f03c0 	ret
