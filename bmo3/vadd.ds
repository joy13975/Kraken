
vadd.a64:     file format elf64-littleaarch64
vadd.a64
architecture: aarch64, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x0000000000000100

Program Header:
    LOAD off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**16
         filesz 0x0000000000000188 memsz 0x0000000000000188 flags r-x
    LOAD off    0x0000000000000188 vaddr 0x0000000000010188 paddr 0x0000000000010188 align 2**16
         filesz 0x0000000000002000 memsz 0x0000000000002000 flags rw-
private flags = 0:

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .text         00000088  0000000000000100  0000000000000100  00000100  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00002000  0000000000010188  0000000000010188  00000188  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000015  0000000000000000  0000000000000000  00002188  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
0000000000000100 l    d  .text	0000000000000000 .text
0000000000010188 l    d  .data	0000000000000000 .data
0000000000000000 l    d  .comment	0000000000000000 .comment
0000000000000000 l    df *ABS*	0000000000000000 vadd.c
0000000000012188 g       .data	0000000000000000 _bss_end__
0000000000012188 g       .data	0000000000000000 __bss_start__
0000000000012188 g       .data	0000000000000000 __bss_end__
0000000000010188 g     O .data	0000000000001000 nums1k1
0000000000012188 g       .data	0000000000000000 __bss_start
0000000000000100 g     F .text	0000000000000088 main
0000000000012188 g       .data	0000000000000000 __end__
0000000000012188 g       .data	0000000000000000 _edata
0000000000012188 g       .data	0000000000000000 _end
0000000000080000 g       .comment	0000000000000000 _stack
0000000000010188 g       .data	0000000000000000 __data_start
0000000000011188 g     O .data	0000000000001000 nums1k2



Disassembly of section .text:

0000000000000100 <main>:
 100:	a9bf6ffc 	stp	x28, x27, [sp,#-16]!
 104:	d12003ff 	sub	sp, sp, #0x800
 108:	aa1f03e8 	mov	x8, xzr
 10c:	90000089 	adrp	x9, 10000 <main+0xff00>
 110:	91062129 	add	x9, x9, #0x188
 114:	910003ea 	mov	x10, sp
 118:	b000008b 	adrp	x11, 11000 <__data_start+0xe78>
 11c:	9106216b 	add	x11, x11, #0x188
 120:	8b08012c 	add	x12, x9, x8
 124:	ad400580 	ldp	q0, q1, [x12]
 128:	8b08016c 	add	x12, x11, x8
 12c:	ad400d82 	ldp	q2, q3, [x12]
 130:	4ea08440 	add	v0.4s, v2.4s, v0.4s
 134:	4ea18461 	add	v1.4s, v3.4s, v1.4s
 138:	8b08014c 	add	x12, x10, x8
 13c:	ad000580 	stp	q0, q1, [x12]
 140:	91008108 	add	x8, x8, #0x20
 144:	f120011f 	cmp	x8, #0x800
 148:	54fffec1 	b.ne	120 <main+0x20>
 14c:	b947ffe8 	ldr	w8, [sp,#2044]
 150:	93407d09 	sxtw	x9, w8
 154:	92afefea 	mov	x10, #0xffffffff8080ffff    	// #-2139029505
 158:	f290102a 	movk	x10, #0x8081
 15c:	9b0a7d29 	mul	x9, x9, x10
 160:	d360fd29 	lsr	x9, x9, #32
 164:	0b080129 	add	w9, w9, w8
 168:	13077d2a 	asr	w10, w9, #7
 16c:	0b497d49 	add	w9, w10, w9, lsr #31
 170:	53185d2a 	lsl	w10, w9, #8
 174:	4b090149 	sub	w9, w10, w9
 178:	4b090100 	sub	w0, w8, w9
 17c:	912003ff 	add	sp, sp, #0x800
 180:	a8c16ffc 	ldp	x28, x27, [sp],#16
 184:	d65f03c0 	ret
