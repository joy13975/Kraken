#test program for counting upto 100,000

ldi r0 0                #use r0 as stack pointer and initialise to 0
mov r1 r0               #use r1 as stack offset for variable allocation

#int i = 0;
addi r1 0               #allocate mem address for i: r1 = r0 = 0 => 0 (essentially no-op)
sti r1 0                #store constant 0 into mem[r1=0]

#int max = 100000;
addi r1 r1 1            #allocate mem address for max: r1 + 1 = 0 + 1 => 1
sti r1 100000           #store constant 100000 into mem[r1=1]

#while(i < max)
#    i = i + 1;
add r2 r0 0             #get address of 0th variable on stack => i
ld r2 r2                #laod data from address of 0th variable into r2
add r3 r0 1             #get address of 1st variable on stack => max
ld r3 r3                #load data from address of 1st variable into r3

rbi 2                   #jump forward 2 instructions
add r2 r2 1             #r2 = i = i + 1
rblt -1 r2 r3           #jump back to head of loop

#write back
add r4 r0 0             #get address of 0th variable on stack => i
st r4 r2                #store r2 = i into address in r4 = 0th address = i in mem
add r4 r0 1             #get address of 1st variable on stack => max
st r4 r3                #store r3 = max into address in r4 = 1st address = max in mem

halt