#memset(0, 1337, 101);
sub r0 r0 r0
addi r0 r0 0
addi r1 r0 101
addi r2 r0 -1337
vset r0 r1 r2

#int i = 0;
sub r0 r0 r0    #r0(i) := 0
sti 0 r0        #&i = 0

#int lim = 32;
sub r1 r1 r1    #r1(lim) := 0
addi r1 r1 32   #r1(lim) += 32
sti 1 r1        #&lim = 1

#int a_ptr = 5;
sub r2 r2 r2    #r2(a_ptr) := 0
addi r2 r2 5    #r2(a_ptr) += 5
sti 2 r2        #&a_ptr = 2

#int b_ptr = a + lim;
sub r3 r3 r3    #r3(b_ptr) := 0
add r3 r2 r1    #r3(b_ptr) := r2(a_ptr) + r1(lim)
sti 3 r3        #&b_ptr = 3

#int *c = b + lim;
sub r4 r4 r4    #r4(c_ptr) := 0
add r4 r3 r1    #r0(c_ptr) := r3(b_ptr) + r1(lim)
sti 4 r4        #&c_ptr = 4

#while(i < lim)
#c[i] = a[i] + b[i];
#i++;
rb 9
add r5 r2 r0    #r5(a_ptr+i) := r2(a_ptr) + r0(i)
add r6 r3 r0    #r6(b_ptr+i) := r3(b_ptr) + r0(i)
add r7 r4 r0    #r7(c_ptr+i) := r4(c_ptr) + r0(i)
ld r8 r5        #r5(*(a_ptr+i)) := mem[r5(a_ptr+i)]
ld r9 r6        #r6(*(b_ptr+i)) := mem[r6(b_ptr+i)]
add r10 r8 r9   #r10(*(c_ptr+i)) := r8 + r9
st r7 r10       #mem[r7(c_ptr+i)] := r10(*(a_ptr+i) + *(b_ptr+i))
addi r0 r0 1    #r0(i) += 1
rblt -8 r0 r1   #go back into loop if r0(i) < r1(lim)
